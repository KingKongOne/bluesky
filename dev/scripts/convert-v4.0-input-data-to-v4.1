#!/usr/bin/env python3

import argparse
import json
import logging
import sys

from bluesky import marshal

EXAMPLES_STRING = """
Examples:

    {script} --log-level INFO -i input-v4.0.json -o input-v4.1.json

 """.format(script=sys.argv[0])
def parse_args():
    parser = argparse.ArgumentParser()
    parser.add_argument('-i', '--input', help="input file", required=True)
    parser.add_argument('-o', '--output', help="output file", required=True)
    parser.add_argument('--indent', help="json indentation", type=int)
    parser.add_argument('--log-level', default="INFO", help="Log level")

    parser.epilog = EXAMPLES_STRING
    parser.formatter_class = argparse.RawTextHelpFormatter

    args = parser.parse_args()

    logging.basicConfig(level=getattr(logging, args.log_level),
        format='%(asctime)s %(levelname)s: %(message)s')

    logging.info(" Args:")
    for k,v in args.__dict__.items():
        logging.info("   %s: %s", k, v)

    return args

def convert(input_data):
    fires = (input_data.pop('fires', None)
        or input_data.pop('fire_information', []))

    input_data['fires'] = Blueskyv4_0To4_1().marshal(fires)

    return input_data


def main():
    args = parse_args()

    with open(args.input, 'r') as f:
        input_data = json.loads(f.read())

    new_input_data = convert(input_data)

    with open(args.output, 'w') as f:
        f.write(json.dumps(new_input_data, indent=args.indent))

if __name__ == "__main__":
    main()
